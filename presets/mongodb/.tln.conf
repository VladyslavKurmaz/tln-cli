module.exports = {
  tags: (tln) => [],
  options: (tln, options) => {},
  dotenvs: (tln) => [],
  depends: (tln) => [],
  inherits: (tln) => [],
  variables: (tln, variables) => {},
  steps: (tln) => [
    {
      id: 'docker-build',
      filter: 'linux',
      script: (tln, script) => script.set([
        'docker build -t ${COMPONENT_ID}:${COMPONENT_VERSION} .'
      ])
    },
    {
      id: 'docker-run',
      filter: 'linux',
      script: (tln, script) => script.set([
        'docker run -d --rm \\',
        ' -p ${COMPONENT_PARAM_PORT}:${COMPONENT_PARAM_PORT} \\',
        ' -e MONGO_INITDB_ROOT_USERNAME=${COMPONENT_PARAM_DB_ROOT_USER} \\',
        ' -e MONGO_INITDB_ROOT_PASSWORD=${COMPONENT_PARAM_DB_ROOT_PASS} \\',
        ' -v ${COMPONENT_PARAM_DB_VOLUME}:/data/db \\',
        ' -e MONGO_INITDB_DATABASE=${COMPONENT_PARAM_DB_NAME} \\',
        ' --name ${COMPONENT_ID} ${COMPONENT_ID}:${COMPONENT_VERSION}'
      ])
    },
    {
      id: 'mongo-run-cli',
      filter: 'linux',
      script: (tln, script) => script.set([
        'docker exec -it ${COMPONENT_ID} mongo -u ${COMPONENT_PARAM_DB_ROOT_USER} -p ${COMPONENT_PARAM_DB_ROOT_PASS}'
      ])
    },
    {
      id: 'mongo-migration-status',
      filter: 'linux',
      script: (tln, script) => script.set([
        'migrate-mongo status'
      ])
    },
    {
      id: 'mongo-migration-up',
      filter: 'linux',
      script: (tln, script) => script.set([
        'migrate-mongo up'
      ])
    },
    {
      id: 'mongo-migration-down',
      filter: 'linux',
      script: (tln, script) => script.set([
        'migrate-mongo down'
      ])
    }
  ],
  components: (tln) => []
}