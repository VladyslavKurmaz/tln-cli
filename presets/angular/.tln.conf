module.exports = {
  tags: (tln) => [],
  options: (tln, options) => {},
  dotenvs: (tln) => [],
  depends: (tln) => [],
  inherits: (tln) => [],
  variables: (tln, variables) => {},
  steps: (tln) => [
    {
      id: 'install',
      desc: '',
      script: (tln, script) => {
        const id = script.env["COMPONENT_ID"];
        const version = '8';//id.split('-')[1];
        script.set([
          `npm install -g @angular/cli@${version}`,
        ])
      }
    },
    {
      id: 'init',
      desc: '',
      script: (tln, script) => {
        const id = script.env["COMPONENT_ID"];
        console.log(id);
        const version = id.split('-')[1];
        script.set([
          `npm install @angular/cli@${version}`,
          'npm i'
        ])
      }
    },
    {
      id: 'build',
      desc: '',
      script: (tln, script) => script.set([
        'ng build'
      ])
    },
    {
      id: 'build-prod',
      desc: '',
      script: (tln, script) => script.set([
        'ng build --configuration=production'
      ])
    },
    {
      id: 'build-mobile',
      desc: '',
      script: (tln, script) => script.set([
        `ng build --prod --configuration=production --base-href . --output-path mobile/`
      ])
    },
    {
      id: 'lint',
      desc: '',
      script: (tln, script) => script.set([
        `ng lint ${tln.utils.shield('COMPONENT_ID')} --format=prose --type-check=true`
      ])
    },
    {
      id: 'test',
      desc: '',
      script: (tln, script) => script.set([
        `ng test ${tln.utils.shield('COMPONENT_ID')} --code-coverage`
      ])
    },
    {
      id: 'serve',
      desc: '',
      script: (tln, script) => script.set([
        `ng serve --host=${tln.utils.shield('COMPONENT_PARAM_LSTN')} --port=${tln.utils.shield('COMPONENT_PARAM_PORT')}`
      ])
    },
    {
      id: 'docker-build',
      desc: '',
      script: (tln, script) => script.set([
        'rm -rf ./target || true',
        'mkdir target',
        'mkdir target/conf.d',
        'if [ -d ./ssl ]',
        'then',
        '  envsubst "\\${COMPONENT_ID} \\${COMPONENT_PARAM_HOST}" > ./target/conf.d/default.conf < ./default.conf.https.template',
        '  cp -r ./ssl ./target/',
        'else',
        '  envsubst "\\${COMPONENT_PARAM_HOST}" > ./target/conf.d/default.conf < ./default.conf.template',
        'fi',
        'docker build \\',
        `  -t ${tln.utils.shield('COMPONENT_PARAM_LSTN')}:${tln.utils.shield('COMPONENT_VERSION')} .`
      ])
    },
    {
      id: 'docker-run',
      desc: '',
      script: (tln, script) => script.set([
        `docker run -d --rm \\`,
        `  -p ${tln.utils.shield('COMPONENT_PARAM_PORT')}:80 \\`,
        `  -p ${tln.utils.shield('COMPONENT_PARAM_PORTS')}:443 \\`,
        `  --name ${tln.utils.shield('COMPONENT_PARAM_LSTN')} ${tln.utils.shield('COMPONENT_ID')}:${tln.utils.shield('COMPONENT_VERSION')}`
      ])
    }
  ],
  components: (tln) => [
    { id: 'angular-8' }
  ]
};