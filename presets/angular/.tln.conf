module.exports = {
  tags: (tln) => [],
  options: (tln, options) => {},
  dotenvs: (tln) => [],
  depends: (tln) => [],
  inherits: (tln) => [],
  variables: (tln, variables) => {},
  steps: (tln) => [
    {
      id: 'init',
      desc: '',
      script: (tln, script) => script.set([
        'npm i'
      ])
    },
    {
      id: 'build',
      desc: '',
      script: (tln, script) => script.set(['ng build'])
    },
    {
      id: 'build-prod',
      desc: '',
      script: (tln, script) => script.set(['ng build --configuration=production'])
    },
    {
      id: 'build-mobile',
      desc: '',
      script: (tln, script) => script.set([
        'ng build --prod --configuration=production --base-href . --output-path mobile/'
      ])
    },
    {
      id: 'lint',
      desc: '',
      script: (tln, script) => script.set([
        'ng lint ${COMPONENT_ID} --format=prose --type-check=true'
      ])
    },
    {
      id: 'test',
      desc: '',
      script: (tln, script) => script.set([
        'ng test ${COMPONENT_ID} --code-coverage'
      ])
    },
    {
      id: 'serve',
      desc: '',
      script: (tln, script) => script.set([
        'ng serve --host=${COMPONENT_PARAM_LSTN} --port=${COMPONENT_PARAM_PORT}'
      ])
    },
    {
      id: 'docker-build',
      desc: '',
      script: (tln, script) => script.set([
        'rm -rf ./target || true',
        'mkdir target',
        'mkdir target/conf.d',
        'if [ -d ./ssl ]',
        'then',
        '  envsubst "\\${COMPONENT_ID} \\${COMPONENT_PARAM_HOST}" > ./target/conf.d/default.conf < ./default.conf.https.template',
        '  cp -r ./ssl ./target/',
        'else',
        '  envsubst "\\${COMPONENT_PARAM_HOST}" > ./target/conf.d/default.conf < ./default.conf.template',
        'fi',
        'docker build \\',
        '  -t ${COMPONENT_ID}:${COMPONENT_VERSION} .'
      ])
    },
    {
      id: 'docker-run',
      desc: '',
      script: (tln, script) => script.set([
        'docker run -d --rm \\',
        '  -p ${COMPONENT_PARAM_PORT}:80 \\',
        '  -p ${COMPONENT_PARAM_PORTS}:443 \\',
        '  --name ${COMPONENT_ID} ${COMPONENT_ID}:${COMPONENT_VERSION}'
      ])
    }
  ],
  components: (tln) => [],
};