module.exports = {
  tags: (tln) => [],
  options: (tln, options) => {
    options
      .add('cmd', 'TLN_GOLANG_CMD', 'Golang package id', 'service.go')
      .add('package', 'TLN_GOLANG_PACKAGE', 'Golang package id', [])
    ;
  },
  dotenvs: (tln) => [],
  depends: (tln) => [],
  inherits: (tln) => [],
  variables: (tln, variables) => {
    variables
      .set('PYTHON_HOME', (tln, data) => data.env['COMPONENT_ORIGIN'])
      .prepend('PATH', (tln, data) => `${data.env['COMPONENT_ORIGIN']}`);
  },
  steps: (tln) => [
    {
      id: 'build',
      desc: '',
      script: (tln, script) => script.set([`go mod tidy && go build ${script.env['TLN_GOLANG_CMD']}`])
    },
    {
      id: 'go-get',
      desc: '',
      script: (tln, script) => script.set([`go get ${script.env['TLN_GOLANG_PACKAGE']}`])
    },
    {
      id: 'install',
      filter: '',
      desc: '',
      script: (tln, script) => {
        const utils = require('../utils');
        let id = script.env["COMPONENT_ID"];
        if (id === 'python') {
          id = 'python-3.7.4';
        }
        //
        defaultDistrs = {
          'default-python': {
            'ubuntu': [],
            'centos': []
          }
        };
        if (!utils.getDefaultScript(tln, id, defaultDistrs, script)) {
          const version = id.split('-')[1];
          script.set(utils.getDownloadScript(tln, {
            linux: {name: ``,  opts: [``, `.`, ``], url: `https://dl.google.com/go/go${version}.linux-amd64.tar.gz`},
            darwin: {name: ``,  opts: [``, `.`, ``], url: `https://dl.google.com/go/go${version}.darwin-amd64.tar.gz`},
            win32: {name: `python-${version}-embed-amd64.zip`,  opts: [``, `.`, ``], url: `https://www.python.org/ftp/python/${version}/python-${version}-embed-amd64.zip`}
          }));
        }
      }
    }
  ],
  components: (tln) => [
    {id: 'default-python'},
    {id: 'python-3.7.4'}
  ],
};