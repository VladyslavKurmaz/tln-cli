const path = require('path');

module.exports = {
  tags: (tln) => [],
  options: (tln, options) => {
    options
      .add('host',      'TLN_JENKINS_HOST',     'Jenkisn host url',                 'localhost')
      .add('port',      'TLN_JENKINS_PORT',     'Jenkisn host port',                '8080')
      .add('user',      'TLN_JENKINS_USER',     'User name',                        'admin')
      .add('token',     'TLN_JENKINS_TOKEN',    'User access token',                null)
      .add('plugins',   'TLN_JENKINS_PLUGINS',  'Space separated list of plugins',  null)
    ;
  },
  dotenvs: (tln) => [],
  depends: (tln) => [],
  inherits: (tln) => [],
  variables: (tln, variables) => {},
  steps: (tln) => [
    {
      id: 'install',
      filter: 'ubuntu',
      script: (tln, script) => script.set([
          'wget -q -O - https://pkg.jenkins.io/debian/jenkins-ci.org.key | sudo apt-key add -',
          'echo deb https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list',
          'sudo apt-get update',
          'sudo apt-get -y install jenkins',
          'sudo systemctl start jenkins'
        ])
    },
    {
      id: 'install-plugins',
      filter: 'linux',
      script: (tln, script) => {
        const host = script.env.TLN_JENKINS_HOST;
        const port = script.env.TLN_JENKINS_PORT;
        const user = script.env.TLN_JENKINS_USER;
        const token = script.env.TLN_JENKINS_TOKEN;
        const plugins = script.env.TLN_JENKINS_PLUGINS;
        if (token && plugins){
          script.set([
            `echo ---- Installing Jenkins plugins ----`,
            `plugins=(${plugins})`,
            `for plugin in "\${plugins[@]}"`,
            `do`,
            `  echo ---- Installing \${plugin} ----`,
            `  curl -vvv \\`,
            `    --user '${user}:${token}' \\`,
            `    --data "<jenkins><install plugin='\${plugin}@latest'/></jenkins>" \\`,
            `    --header 'Content-Type: text/xml' \\`,
            `    http://${host}:${port}/pluginManager/installNecessaryPlugins`,
            `  echo`,
            `done`
          ])
        } else {
          script.logger.error(`Password and/or list of plugins were not defined`);
        }
      }
    },
    {
      id: 'generate',
      filter: '',
      script: (tln, script) => {
        const osInfo = tln.getOsInfo();
        const platform = osInfo.platform;
        const src = path.join(__dirname, 'Jenkinsfile.template');
        const dest = path.join(script.env['COMPONENT_HOME'], 'Jenkinsfile');
        if (platform === 'win32') {
          script.set([
            `copy ${src} ${dest}`
          ]);
        } else {
          script.set([
            `cp ${src} ${dest}`
          ]);
        }
      }
    }
  ],
  components: (tln) => [],
};
