const path = require('path');

module.exports = {
  tags: (tln) => [],
  options: (tln, options) => {},
  dotenvs: (tln) => [],
  depends: (tln) => [],
  inherits: (tln) => [],
  variables: (tln, variables) => {/*
    variables
      .set('JAVA_HOME', (tln, data) => data.env['COMPONENT_ORIGIN'])
      .prepend('PATH', (tln, data) => `${data.env['COMPONENT_ORIGIN']}${data.sep}bin`);
  */},
  steps: (tln) => [
    {
      id: 'install',
      filter: '',
      script: (tln, script) => {
        if (tln.utils.canInstallComponent(tln, script)) {
          let id = script.env["COMPONENT_ID"];
          const version = id.split('-')[1];
          const version2 = version.replace(/\./g, '_');
          script.set(tln.utils.getDownloadScript(tln, {
            'linux': {name: `boost_${version2}.tar.gz`, opts: null, url: `https://dl.bintray.com/boostorg/release/${version}/source/boost_${version2}.tar.gz`},
            'darwin': {name: `boost_${version2}.tar.gz`, opts: null, url: `https://dl.bintray.com/boostorg/release/${version}/source/boost_${version2}.tar.gz`},
            'win32': {name: `boost_${version2}.zip`, opts: { src: `boost_${version2}`, flt:`*`, dest: `.`, rmv: `boost_${version2}`}, url: `https://dl.bintray.com/boostorg/release/${version}/source/boost_${version2}.zip`}
          }));
        }

      }
    }
  ],
  components: (tln) => [
    { id: 'boost-1.71.0' },
    { id: 'boost-1.70.0' }
  ]
}