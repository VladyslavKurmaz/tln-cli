'use strict';

const path = require('path');
const fs = require('fs');

class Subtree {


  constructor() {
    this.subtreesFileName = '.gitsubtrees';
  }

  clone(context) {
    return [
      `git clone ${context.env.TLN_GIT_ORIGIN} .`,
      `git config --local user.name "${context.env.TLN_GIT_USER}"`,
      `git config --local user.email "${context.env.TLN_GIT_EMAIL}"`
    ]
  }

  fork(context) {
    return [
      `git clone ${context.env.TLN_GIT_ORIGIN} .`,
      `git remote add upstream ${context.env.TLN_GIT_UPSTREAM}`,
      `git config --local user.name "${context.env.TLN_GIT_USER}"`,
      `git config --local user.email "${context.env.TLN_GIT_EMAIL}"`
    ]
  }

  getSubtreesFileName(home) {
    return path.join(home, this.subtreesFileName);
  }

  loadSubtrees(home) {
    const fn = this.getSubtreesFileName(home);
    let r = [];
    if (fs.existsSync(fn)) {
      r = JSON.parse(fs.readFileSync(fn, 'utf8'));
    }
    return r;
  }

  saveSubtrees(home, subtrees) {
    fs.writeFileSync(this.getSubtreesFileName(home), JSON.stringify(subtrees, null, '  '));
  }

  addSubtree(context) {
    let r = []
    const home = context.env.TLN_COMPONENT_HOME;
    const prefix = context.env.TLN_GIT_PREFIX;
    const origin = context.env.TLN_GIT_ORIGIN;
    const branch = context.env.TLN_GIT_BRANCH;
    //
    let subtrees = this.loadSubtrees(home);
    let subtree = subtrees.find(elem  => elem.prefix === prefix);
    if (subtree) {
      context.logger.error(`Subtree with prexix: ${prefix} and origin: ${origin} was already added`);
    } else {
      subtree = {
        prefix: prefix,
        origin: origin,
        branch: branch
      };
      subtrees.push(subtree);
      this.saveSubtrees(home, subtrees);
      r = [
        `git add ${this.subtreesFileName}`,
        `git commit -m"New subtree with prefix: ${subtree.prefix} and origin: ${subtree.origin} was added"`,
        `git subtree add --prefix ${subtree.prefix} ${subtree.origin} ${subtree.branch} --squash`
      ];
    }
    return r;
  }

  pullSubtree(context) {
    let r = []
    const home = context.env.TLN_COMPONENT_HOME;
    const prefix = context.env.TLN_GIT_PREFIX;
    const branch = context.env.TLN_GIT_BRANCH;
    //
    let subtrees = this.loadSubtrees(home);
    let subtree = subtrees.find(elem  => elem.prefix === prefix);
    if (subtree) {
      if (branch) {
        subtree.branch = branch;
      }
      this.saveSubtrees(home, subtrees);
      r = [
        `git add ${this.subtreesFileName} || true`,
        `git commit -m"Update subtree with prefix: ${subtree.prefix} and origin: ${subtree.origin}" || true`,
        `git subtree pull --prefix ${subtree.prefix} ${subtree.origin} ${subtree.branch} --squash`
      ];
    } else {
      context.logger.error(`Subtree with prefix: ${prefix} was not found`);
    }
    return r;
  }

}


module.exports = {
  tags: (context) => [],
  options: (context) => [
    { id: 'origin',   desc: 'Origin url',               variable: 'TLN_GIT_ORIGIN',   default: null },
    { id: 'upstream', desc: 'Upstream remote url',      variable: 'TLN_GIT_UPSTREAM', default: null },
    { id: 'branch',   desc: 'Working branch',           variable: 'TLN_GIT_BRANCH',   default: null },
    { id: 'user',     desc: 'User name',                variable: 'TLN_GIT_USER',     default: null },
    { id: 'email',    desc: 'User email',               variable: 'TLN_GIT_EMAIL',    default: null },
    { id: 'prefix',   desc: 'Submodule/subtree prefix', variable: 'TLN_GIT_PREFIX',   default: null }
  ],
  inherits: (context) => [],
  depends: (context) => [],
  variables: (context) => [],
  steps: (context) => [
    {
      id: 'git-clone',
      desc: '\
Clone git repository and configure user, \
example: tln git-clone --origin=git@github.com:org/proj.git --user=user --email=user@org.com',
      script: (context) => (new Subtree).clone(context)
    },
    {
      id: 'git-fork',
      desc: '\
Clone git repository, add additional remote (upstream) and configure user, \
example: tln git-fork --origin=git@github.com:user/proj.git --upstream=git@github.com:org/proj.git --user=user --email=user@org.com',
      script: (context) => (new Subtree).fork(context)
    },
    {
      id: 'git-subtree-add',
      desc: '\
Add subtree to the project, \
example: tln git-subtree-add --origin=https://github.com/project-talan/tln-nodejs.git --prefix=services/api --branch=master',
      script: (context) => (new Subtree).addSubtree(context)
    },
    {
      id: 'git-subtree-pull',
      desc: '\
Pull subtree, \
example: tln git-subtree-pull --prefix=services/api [--branch=master]',
      script: (context) => (new Subtree).pullSubtree(context)
    }
  ],
  components: (context) => []
}