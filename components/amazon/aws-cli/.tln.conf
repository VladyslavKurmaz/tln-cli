const path = require('path');

module.exports = {
  tags: async (tln) => [],
  dotenvs: async (tln) => [],
  env: async (tln, env) => {
    env.AWS_CLI_HOME = env.TLN_COMPONENT_HOME;
    env.PATH = [ path.join(env.TLN_COMPONENT_HOME, 'aws', 'dist'), env.PATH].join(path.delimiter);
  },
  options: async (tln, args) => [],
  inherits: async (tln) => [],
  depends: async (tln) => [],
  steps: async (tln) => [
    {
      id: 'install',
      builder: async (tln, script) => {
        const id = script.env.TLN_COMPONENT_ID;
        const home = script.env.TLN_COMPONENT_HOME;
        const {name, version} = tln.unpackId(id);
        if (version && tln.canInstallComponent(tln, id, home)) {
          script.set(tln.getDownloadScript(tln, {
            linux: {
              name: `awscli-exe-linux-x86_64-${version}.zip`,
              opts: null,
              url: `https://awscli.amazonaws.com/awscli-exe-linux-x86_64-${version}.zip`
            },
            darwin: {
              name: `cmake-${version}-Darwin-x86_64.tar.gz`,
              opts: { src: `cmake-${version}-Darwin-x86_64/CMake.app/Contents`, flt:`*`, dest: '.', rmv: `cmake-${version}-Darwin-x86_64` },
              url: `https://github.com/Kitware/CMake/releases/download/v${version}/cmake-${version}-Darwin-x86_64.tar.gz`
            },
            win32: {
              name: `cmake-${version}-win64-x64.zip`,
              opts: { src: `cmake-${version}-win64-x64`, flt: `*`, dest: `.`, rmv: `cmake-${version}-win64-x64` },
              url: `https://github.com/Kitware/CMake/releases/download/v${version}/cmake-${version}-win64-x64.zip`
            }
          }));
        }
      }
    }
  ],
  components: async (tln) => require('./components.js')
}
